name: Create Release

on:
  push:
    tags-ignore:
      - testing_*

jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1
        with:
          vs-prerelease: true

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0

      - name: Restore NuGet Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          
      - name: Restore NuGet Packages
        run: nuget restore SimpleHeels.sln

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"

      - name: Build with MSBuild
        run: msbuild SimpleHeels.sln /p:Configuration=Release

      - name: Create ZIP Archive
        run: |
          Compress-Archive -Path './bin/Release/*' -DestinationPath './bin/Release/SimpleHeels.zip'

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./bin/Release/SimpleHeels.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: SimpleHeels ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/SimpleHeels.zip
          asset_name: SimpleHeels.zip
          asset_content_type: application/zip

      - name: Write out repo.json
        run: |
          $ver = '${{ github.ref_name }}'
          $path = './repo.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json[0].AssemblyVersion = $ver
          $json[0].TestingAssemblyVersion = $ver
          $json[0].DownloadLinkInstall = $json.DownloadLinkInstall -replace '[^/]+/SimpleHeels.zip',"$ver/SimpleHeels.zip"
          $json[0].DownloadLinkTesting = $json.DownloadLinkTesting -replace '[^/]+/SimpleHeels.zip',"$ver/SimpleHeels.zip"
          $json[0].DownloadLinkUpdate = $json.DownloadLinkUpdate -replace '[^/]+/SimpleHeels.zip',"$ver/SimpleHeels.zip"
          $content = $json | ConvertTo-Json -AsArray
          set-content -Path $path -Value $content

      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin master
          git branch -f master ${{ github.sha }}
          git checkout master
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin master

  trigger_workflow:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Workflow in DalamudPlugin Repository
        run: |
          repo_owner="MeowZWR"
          repo_name="DalamudPlugin"
          event_type="request-update-run-action"
          
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.MEOWRSTRIGGER }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d "{\"event_type\": \"$event_type\", \"client_payload\": {\"unit\": false, \"integration\": true}}"
